<html lang="en">
<meta charset='utf-8'>
<meta name="viewport" content="width=device-width">

<script type='text/javascript' src='https://code.jquery.com/jquery-3.2.1.min.js'></script>
<link rel='stylesheet' href='https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css'>
<script type='text/javascript' src='https://code.jquery.com/ui/1.12.1/jquery-ui.min.js'></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.2/chosen.css">
<script type='text/javascript' src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.2/chosen.jquery.js" type="text/javascript"></script>

<link href="tri/css/jquery.triSwitch.css" rel="stylesheet">
<link href="https://www.jqueryscript.net/css/jquerysctipttop.css" rel="stylesheet" type="text/css">
<script src="tri/js/jquery.triSwitch.js"></script>

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>

<link href="tabulator/css/tabulator.min.css" rel="stylesheet">
<script type="text/javascript" src="tabulator/js/tabulator.js"></script>

<script src='http://d3js.org/d3.v3.min.js'></script>

<script type='text/javascript' src='jquery.sparkline.min.js'></script>

<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
<link rel="stylesheet" href="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css">
<link rel="stylesheet" href="phylotree.css">
<link rel="stylesheet" href="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/default.min.css">

<script src="http://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js"></script>
<script src="http://netdna.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js" charset="utf-8"></script>
<script type='text/javascript' src='phylotree.js'></script>


<link rel="stylesheet" type="text/css" href="fomantic/semantic.min.css">
<script src="fomantic/semantic.min.js"></script>

<script type="application/javascript" src="phylocanvas-quickstart.js"></script>
<script type="application/javascript" src="index.js"></script>

<script src="scrollsnap/jquery.scrollstop.js"></script>
<script src="scrollsnap/jquery.easing.min.js"></script>
<script src="scrollsnap/jquery.scrollsnap.js"></script>
<script src="venn.js"></script>
<script type="text/javascript" src="jszip.js"></script>
<script type="text/javascript" src="FileSaver.min.js"></script>
<script type="text/javascript" src="http://oss.sheetjs.com/js-xlsx/xlsx.full.min.js"></script>



<link rel="stylesheet" href="base.css">
<script type='text/javascript' src="base.js" type="text/javascript" charset="utf-8"></script>

<script type='text/javascript' src="data/annotation.js" type="text/javascript" charset="utf-8"></script>
<script type='text/javascript' src="data/statistics.js" type="text/javascript" charset="utf-8"></script>
<script type='text/javascript' src="data/phylo.js" type="text/javascript" charset="utf-8"></script>
<script type='text/javascript' src="data/plot.js" type="text/javascript" charset="utf-8"></script>
<script type='text/javascript' src="data/sequenceList.js" type="text/javascript" charset="utf-8"></script>
<script type='text/javascript' src="data/data.doms.js" type="text/javascript" charset="utf-8"></script>
<script type='text/javascript' src="data/data.homo.js" type="text/javascript" charset="utf-8"></script>
<script type='text/javascript' src="data/data.orthos.js" type="text/javascript" charset="utf-8"></script>

<link rel="stylesheet" type="text/css" href="index.css">
<script type='text/javascript' src="config.js" type="text/javascript" charset="utf-8"></script>
<script type="text/javascript" src="modules/module.subPages.js"></script>
<script type="text/javascript" src="modules/module.venn.js"></script>
<script type="text/javascript" src="modules/module.session.js"></script>
<script type="text/javascript" src="modules/module.home.js"></script>
<script type="text/javascript" src="modules/module.blast.js"></script>
<script type="text/javascript" src="modules/module.familyList.js"></script>
<script type="text/javascript" src="modules/module.bestSolution.js"></script>
<script type="text/javascript" src="modules/module.table.js"></script>
<script type="text/javascript" src="modules/module.family.js"></script>
<script type="text/javascript" src="modules/module.staticPage.js"></script>
<script type="text/javascript" src="family.phylogeny.js"></script>

<link href="tri/css/jquery.triSwitch.css" rel="stylesheet">

































<script src="sigma/src/sigma.core.js"></script>
<script src="sigma/src/conrad.js"></script>
<script src="sigma/src/utils/sigma.utils.js"></script>
<script src="sigma/src/utils/sigma.polyfills.js"></script>
<script src="sigma/src/sigma.settings.js"></script>
<script src="sigma/src/classes/sigma.classes.dispatcher.js"></script>
<script src="sigma/src/classes/sigma.classes.configurable.js"></script>
<script src="sigma/src/classes/sigma.classes.graph.js"></script>
<script src="sigma/src/classes/sigma.classes.camera.js"></script>
<script src="sigma/src/classes/sigma.classes.quad.js"></script>
<script src="sigma/src/captors/sigma.captors.mouse.js"></script>
<script src="sigma/src/captors/sigma.captors.touch.js"></script>
<script src="sigma/src/renderers/sigma.renderers.canvas.js"></script>
<script src="sigma/src/renderers/sigma.renderers.webgl.js"></script>
<script src="sigma/src/renderers/sigma.renderers.svg.js"></script>
<script src="sigma/src/renderers/sigma.renderers.def.js"></script>
<script src="sigma/src/renderers/webgl/sigma.webgl.nodes.def.js"></script>
<script src="sigma/src/renderers/webgl/sigma.webgl.nodes.fast.js"></script>
<script src="sigma/src/renderers/webgl/sigma.webgl.edges.def.js"></script>
<script src="sigma/src/renderers/webgl/sigma.webgl.edges.fast.js"></script>
<script src="sigma/src/renderers/webgl/sigma.webgl.edges.arrow.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.labels.def.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.hovers.def.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.nodes.def.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edges.def.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edges.curve.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edges.arrow.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edges.curvedArrow.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edgehovers.def.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edgehovers.curve.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edgehovers.arrow.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.edgehovers.curvedArrow.js"></script>
<script src="sigma/src/renderers/canvas/sigma.canvas.extremities.def.js"></script>
<script src="sigma/src/renderers/svg/sigma.svg.utils.js"></script>
<script src="sigma/src/renderers/svg/sigma.svg.nodes.def.js"></script>
<script src="sigma/src/renderers/svg/sigma.svg.edges.def.js"></script>
<script src="sigma/src/renderers/svg/sigma.svg.edges.curve.js"></script>
<script src="sigma/src/renderers/svg/sigma.svg.edges.curvedArrow.js"></script>
<script src="sigma/src/renderers/svg/sigma.svg.labels.def.js"></script>
<script src="sigma/src/renderers/svg/sigma.svg.hovers.def.js"></script>
<script src="sigma/src/middlewares/sigma.middlewares.rescale.js"></script>
<script src="sigma/src/middlewares/sigma.middlewares.copy.js"></script>
<script src="sigma/src/misc/sigma.misc.animation.js"></script>
<script src="sigma/src/misc/sigma.misc.bindEvents.js"></script>
<script src="sigma/src/misc/sigma.misc.bindDOMEvents.js"></script>
<script src="sigma/src/misc/sigma.misc.drawHovers.js"></script>
<!-- END SIGMA IMPORTS -->
<script src="sigma/plugins/sigma.renderers.edgeLabels/settings.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.canvas.edges.labels.def.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.canvas.edges.labels.curve.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.canvas.edges.labels.curvedArrow.js"></script>

<script src="sigma/plugins/sigma.renderers.linkurious/settings.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.labels.def.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.hovers.def.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.nodes.def.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edges.def.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edges.curve.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edges.arrow.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edges.curvedArrow.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edgehovers.def.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edgehovers.curve.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edgehovers.arrow.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edgehovers.curvedArrow.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edges.autoCurve.js"></script>
<script src="sigma/plugins/sigma.renderers.linkurious/canvas/sigma.canvas.edges.autoCurve.js"></script>

<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.canvas.edges.labels.curve.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.canvas.edges.labels.curvedArrow.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.canvas.edges.labels.def.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.svg.edges.labels.curve.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.svg.edges.labels.curvedArrow.js"></script>
<script src="sigma/plugins/sigma.renderers.edgeLabels/sigma.svg.edges.labels.def.js"></script>

<script src="sigma/plugins/sigma.plugins.tooltips/sigma.plugins.tooltips.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/0.8.1/mustache.min.js"></script>

<script src='sigma/src/classes/sigma.classes.edgequad.js'></script>
<script src='sigma/plugins/sigma.renderers.customShapes/shape-library.js'></script>
<script src='sigma/plugins/sigma.renderers.customShapes/sigma.renderers.customShapes.js'></script>
<script src='sigma/plugins/sigma.layout.forceAtlas2/worker.js'></script>
<script src='sigma/plugins/sigma.layout.forceAtlas2/supervisor.js'></script>
<script src='sigma/plugins/sigma.exporters.image/sigma.exporters.image.js'></script>
<link rel='stylesheet' href='sigma/sigma.tooltip.css'>

<link rel="stylesheet" href="https://unpkg.com/huebee@1/dist/huebee.min.css">
<script src="https://unpkg.com/huebee@1/dist/huebee.pkgd.min.js"></script>


<script src="http://cdn.bio.sh/msa/latest/msa.min.gz.js"></script>
<script src="igv.js/igv.js"></script>

<script type="text/javascript" src="modules/module.genome.js"></script>
<script type="text/javascript" src="family.tabs.js"></script>
<script type="text/javascript" src="family.alignment.js"></script>
<script type="text/javascript" src="family.graph.js"></script>



</head>

<style>
	.ui.sidebar.overflowInitial, 
	.overflowInitial {
		overflow:initial !important;
	}
	.modal {
		right: unset !important;
		left: unset !important;
		top: unset !important;
		bottom: unset !important;
	}

	#tabGenomes.tabulator > div.tabulator-tableHolder {
		height:calc(100vh - 302px);
	}
	#tabGroupCustom.tabulator > div.tabulator-tableHolder {
		height:calc(100vh - 359px);
	}
	#textGroupCustom {
		height:calc(100vh - 352px) !important;
	}
	#tabGroupCustom{
		height:calc(100vh - 328px) !important;
	}
	.actions {
		text-align: right;
	}

	body {
		display: grid;
		grid-template-columns: 60px 1fr;
		grid-template-areas: 'leftMenu scrolling';
		overflow:hidden;
		height:100%;
	}
	#leftMenu {
		grid-area:leftMenu;
		border-radius:unset !important;
	}
	.scrolling-sections {
		grid-area:scrolling;
		overflow: auto;
	}

	.scrolling-sections > object {
		width: 100%;
		height: 100%;
	}

	.sidebar.compacted.menu {
		padding:10px !important;
		padding-top:20px !important;
		width: 60px !important;
		-webkit-transition: width 0.4s; /* For Safari 3.1 to 6.0 */
		transition: width 0.4s;
	}
	.sidebar.expanded.menu {
		padding:10px !important;
		padding-top:20px !important;
		width: 300px !important;
		-webkit-transition: width 0.4s; /* For Safari 3.1 to 6.0 */
		transition: width 0.4s;
	}
	@media all and (max-width: 500px) {
		.sidebar.expanded.menu {
			width:100% !important;
		}
	}
	/*@media all and (max-width: 500px) {
		.sidebar.menu {
			width:3em !important;
		}
	}*/
	.sidebar > .top > div.lineMenu,
	.sidebar > .bottom > div.lineMenu {
		display:grid !important;
		width:100%;
		grid-template-columns: 40px;
		grid-template-areas: 'icon';
		justify-items: center;
		align-items: center;
		margin-bottom: 5px;
	}
	/*.sidebar > div.lineMenu:hover {
		background-color: #555;
	}*/
	.sidebar.expanded > .top > div.lineMenu,
	.sidebar.expanded > .bottom > div.lineMenu {
		grid-template-columns: 40px 1fr !important;
		grid-template-areas: 'icon text';
	}
	.sidebar > .top > div.lineMenu > img, .sidebar > .top > div.lineMenu > i,
	.sidebar > .bottom > div.lineMenu > img, .sidebar > .bottom > div.lineMenu > i {
		font-size: 40px;

		grid-area: icon;
		width: 40px;
		height: 40px;
		text-align: center;
		filter:invert(100%);
		display: flex;
  		align-items: center;
	}
	.sidebar > .top > div.lineMenu > span,
	.sidebar > .bottom > div.lineMenu > span {
		grid-area: text;
		color:white;
		font-weight:bold;
		width: 100%;
		text-align: left;
		display: none;
		padding-left: 20px;
	}

	.sidebar.expanded > .top > div.lineMenu > span,
	.sidebar.expanded > .bottom > div.lineMenu > span {
		display: block;
	}

	#leftMenu {
		display: grid;
		grid-template-rows: auto 1fr auto;
		grid-template-areas: 'top' '.' 'bottom';
	}

	#leftMenu > .top {
		grid-area: top;
	}
	#leftMenu > .bottom {
		grid-area: bottom;
	}

	i > .floating.label {
		filter: invert(100%);
		font-size: 0.3em;
		padding: 0.2em;
		padding-top: 0.2em;
		padding-right: 0.2em;
		padding-bottom: 0.2em;
		padding-left: 0.2em;
		top: -0.2em !important;
		left: 80% !important;
		right: unset !important;
		display: none;
	}

	.lineMenu > i > img {
		filter: invert(20%);
	}

</style>

<body onload="load();">
	<div id="saveSubPageModal" class="ui segment modal">
		<div class="ui header">
			<i class="save icon"></i>
			Save as
		</div>
		<div class="content">
			<div class="ui form">
				<div class="field">
					<input id="saveSubPageText" onkeypress="if(event.which == 13 || event.keyCode == 13) {document.getElementById('saveSubPageButton').onclick(); $('#saveSubPageModal').modal('hide'); return false;} return true;"></input>
				</div>
			</div>
		</div>
		<div class="actions">
			<div id="saveSubPageButton" class="ui green ok button">
				<i class="checkmark icon"></i>Change
			</div>
		</div>
	</div>

	<div id="sessionModal" class="ui segment modal">
		<div class="ui header">
			<i class="save icon"></i>
			Upload a session file
		</div>
		<div class="content">
			<div class="ui form">
				<div class="field">
					<input id="sessionFile" type="file"></input>
				</div>
			</div>
		</div>
		<div class="actions">
			<div id="sessionButton" class="ui green ok button">
				<i class="checkmark icon"></i>Load
			</div>
		</div>
	</div>

	<div id="filterGenomesModal" class="ui segment modal">
		<div class="ui header">
			<i class="save icon"></i>
			Save as
		</div>
		<div class="content">
			You selected some genomes, would you like to apply the changes only in the selected genomes?
		</div>
		<div class="actions">
			<div id="saveSubPageButton" class="ui red cancel button">
				<i class="checkmark icon"></i>Apply to all
			</div>
			<div id="saveSubPageButton" class="ui green ok button">
				<i class="checkmark icon"></i>Apply to selected
			</div>
		</div>
	</div>	


	<div id="leftMenu" class="ui inverted labeled icon left inline vertical demo sidebar menu visible compacted overflowInitial">
		<div class="top">
			<div class="lineMenu">
				<i class="icon sidebar" onclick="leftSide();"></i>
				<span></span>
			</div>
			<div class="ui divider"></div>
			
			<div id="menuPageHome" class="lineMenu">
				<i class="icon home"></i>
				<span>Home</span>
			</div>
			
			<div id="menuPageChangelog" class="lineMenu">
				<i class="icon list ul"></i>
				<span>Changelog</span>
			</div>
	
			<div id="menuPageFindFamilies" class="lineMenu" data-position="bottom right">
				<i class="icon search"><div class="floating ui red label">0</div></i>
				<div class="ui flowing popup inverted left transition hidden">
					<div class="ui inverted vertical menu">
						<a id="menuPageFamilyList" class="item">
							By feature list
							<div id="menuSubPageFamilyList" class="menu">
								
							</div>
						</a>

						<a id="menuPageBlast" class="item">
							By blast alignment
							<div id="menuSubPageBlast" class="menu">
								
							</div>
						</a>
					</div>
				</div>
				<span>Find Families</span>	
			</div>
			<div id="menuPageBestSolution" class="lineMenu">
				<i class="" style="font-weight: bold;">CS
					<div class="floating ui red label">0</div>
				</i>
				<div class="ui flowing popup inverted left transition hidden">
					<div id="menuSubPageBestSolution" class="ui inverted vertical menu"></div>
				</div>
				<span>Combined Solution for Groups</span>
			</div>
			<div id="menuPageSuperVenn" class="lineMenu" style="display: none !important">
				<i class="">
					<div class="floating ui red label">0</div>
					<img style="width: 40px;" src="icons/venn-diagram.svg"></img>
				</i>
				<div class="ui flowing popup inverted left transition hidden">
					<div id="menuPageVenn" class="ui inverted vertical menu"></div>
				</div>
				<span>Venn diagram for Groups</span>
			</div>
			<div id="menuPageTable" class="lineMenu">
				<i class="icon table">
					<div class="floating ui red label">0</div>
				</i>
				<div class="ui flowing popup inverted left transition hidden">
					<div id="menuSubPageTable" class="ui inverted vertical menu"></div>
				</div>
				<span>All families detail</span>
			</div>
			<div id="menuPageFamily" class="lineMenu" style="display: none !important">
				<i class="icon folder open">
					<div class="floating ui red label">0</div>
				</i>
				<div class="ui flowing popup inverted left transition hidden">
					<div id="menuSubPageFamily" class="ui inverted vertical menu"></div>
				</div>
				<span>Opened families</span>
			</div>
		</div>
		
		<div class="bottom">
			<div id="menuPageHelp" class="lineMenu" data-position="bottom right">
				<i class="icon question"></i>
				<span>Help</span>
			</div>
			<div id="menuPageLoad" class="lineMenu" data-position="bottom right">
				<i class="icon upload"></i>
				<span>Load Session</span>
			</div>
			<div id="menuPageSave" class="lineMenu" data-position="bottom right">
				<i class="icon save"></i>
				<span>Save Session</span>
			</div>
		</div>

	</div>

	<script>
		function leftSide() {
			let el = document.getElementById("leftMenu");
			if(el.classList.contains("expanded")) {
				el.classList.remove("expanded");
				el.classList.add("compacted");
			}
			else {
				el.classList.add("expanded");
				el.classList.remove("compacted");
			}
		}
	</script>

	<div id="pageHome" class="scrolling-sections">
		<div class="ui raised segments">
			<div class="sectionHeader ui top attached segment">
				<h1 class="ui header">Settings</h1>
			</div>
			<div class="ui attached segment">
				<div id="divteste"></div>
				<div class="settingsGridA">
					<span style="grid-area:labelA;">Orientation</span>
					<div id="view" style="grid-area:objA;" class="ui fluid selection dropdown" onchange="">
						<input name="gender" type="hidden">
						<i class="dropdown icon"></i>
						<div class="text"></div>
						<div class="menu">
							<div class='item' data-value="h">Horizontal</div>
							<div class='item' data-value="v">Vertical</div>


						</div>
					</div>
					<span style="grid-area:labelB;">Dataset:</span>
					<div id="dataset" style="grid-area:objB;" class="ui selection dropdown">
						<input name="gender" type="hidden">
						<i class="dropdown icon"></i>
						<div class="default text"></div>
						<div class="menu">
							<div class='item' data-value="h">Homology</div>
							<div class='item' data-value="o">Orthology</div>
							<div class='item' data-value="d">Domains</div>
							<div class='item' data-value="e">Exclusives</div>

						</div>
					</div>
					<div id="datasetAll" style="grid-area:objB2;" class="ui toggle checkbox"><input name="public" type="checkbox" onchange=";"><label>All</label></div>
				</div>
				<div class="ui horizontal divider">Columns settings</div>
				<div class="settingsGridB">
					<span style="grid-area:labelA;">Groups:</span>
					<select style="grid-area:objA;" data-placeholder="Choose groups to show..." id="groups" class="ui dropdown" multiple="">
						<script>
						if(gs.length > 0)
							for(var i = 0; i < gs.length; i++)
								document.write("<option value=" + i +">" + gs[i].name + "</option>");
						</script>
					</select>
					<span style="grid-area:labelB;">Freeze:</span>
					<select style="grid-area:objB;" data-placeholder="Choose columns to freeze..." id="freeze" class="ui dropdown" multiple="">
						<option value="func">Function</option>
						<option value="coef">Cluster Coeff.</option>
						<option value="nodes"># Seqs</option>
						<option value="gens"># Genomes</option>
					</select>
				</div>
			</div>
			<div class="ui three bottom attached buttons">
				<div id="linkTable" class="ui primary button">See all families</div>
				<div id="linkFamilyList" class="ui button"><i class="search icon"></i>Find family</div>
				<div id="linkBlast" class="ui button" ><i class="search icon"></i>Make blast</div>
			</div>
		</div>


		<div class="section ui raised segments">
			<div class="sectionHeader ui top attached segment">
				<h1 class="ui header">Filters</h1>
			</div>
			<div class="sectionData ui fluid attached segment container" style="display:flex;">
				<div id="context1" class="gridTable">
					<div class="ui pointing secondary menu" style="grid-area:header;">
						<div class="active item" data-tab="Genome Filters" onclick="$('#totalFamiliesGenome').css('display','block');">Genome<div class="text">&nbsp;Filter</div>s</div>
						<div class="item" data-tab="Groups Filters" onclick="$('#totalFamiliesGenome').css('display','none');">Group<div class="text">&nbsp;Filter</div>s</div>
					</div>
					<div id="tabsGenomes" class="ui bottom active tab" data-tab="Genome Filters">
						<div id="tabGenomes" style="grid-area:data2;" class=""></div>
					</div>
					<span id="totalFamiliesGenome" style="font-weight: bold;grid-area:footer;">ddd</span>
					<div id="tabsRg" class="ui tab" data-tab="Groups Filters">
						<div id="tabRg" class="ui tabular menu">
							<script>
								for (var i = 0; i < gs.length; i++)
									if(i == 0)
										document.write("<div id=\"itemTabRg0\" class=\"active item\" data-tab=\"Groups Filters/rg" + i + "\"><div class=\"text\">" + gs[i].name + "</div><div class=\"smallText\">" + i + "</div></div>");
									else
										document.write("<div class=\"item\" data-tab=\"Groups Filters/rg" + i + "\"><div class=\"text\">" + gs[i].name + "</div><div class=\"smallText\">" + (i+1) + "</div></div>");
							</script>
							<div class="item" data-tab="Groups Filters/rgCustom">
								<i class="edit icon"></i><div class="text">Custom</div>
							</div>
						</div>
						<script>
							for (var i = 0; i < gs.length; i++) {
								document.write(
									"<div id=\"tabSegRg" + i + "\" class=\"ui tab\" style=\"grid-area:rgTable;display:grid;grid-template-rows: auto 1fr;overflow:hidden;\" data-tab=\"rg" + i + "\">" + 
									"	<div class=\"ui top attached demo menu\">"+
									"		<div class=\"ui dropdown item\">"+
									"			Set all filter"+
									"			<div class=\"menu\">"+
									"				<a class=\"item\" onclick=\"session.pageHome.setAllFilters(" + i + ", '');\">as Nothing</a>"+
									"				<a class=\"item\" onclick=\"session.pageHome.setAllFilters(" + i + ", 'No')\">as No</a>"+
									"				<a class=\"item\" onclick=\"session.pageHome.setAllFilters(" + i + ", 'Yes')\">as Yes</a>"+
									"				<a class=\"item\" onclick=\"session.pageHome.setAllFilters(" + i + ", 'Yes(Core)')\">as Yes(Core)</a>"+
									"			</div>"+
									"		</div>"+
									"		<div class=\"ui dropdown link item\">"+
									"			<i class=\"download icon\"></i><div class=\"text\">Download</div>"+
									"			<div class=\"menu\">"+
									"				<a class=\"item\" onclick=\"session.pageHome.tabsRg["+i+"].download('csv', 'data.csv');\">Download CSV</a>"+
									"				<a class=\"item\" onclick=\"session.pageHome.tabsRg["+i+"].download('json', 'data.json');\">Download jSON</a>"+
									"				<a class=\"item\" onclick=\"session.pageHome.tabsRg["+i+"].download('xlsx', 'data.xlsx');\">Download XLSX</a>"+
									"			</div>"+
									"		</div>"+
									"		<div class=\"right menu\">"+
									(gs[i].childs.length < 5?"<div class=\"item\"><i class=\"chart pie icon\" onclick=\"openVenn(" + i + ");\"></i></div>":"")+
									"			<div class=\"item\"><i class=\"search icon\" onclick=\"openBestSolution(" + i + ");\"></i></div>"+
									"		</div>"+
									"	</div>"+
									"	<div class=\"tabRgN\" id=\"tabRg" + i + "\"></div>" + 
									"</div>");
							}
						</script>
						<div id="tabSegRgCustom" class="ui active tab" style="grid-area:rgTable;display:grid;grid-template-rows: auto 1fr;overflow:hidden;" data-tab="rgCustom">
							<div class="ui top attached demo menu">
								<a class="item" onclick="$('#divTextCustom').css('display', 'block');$('#divTabCustom').css('display', 'none');$('#tabRgCustom').css('display', 'none');"><i class="redo icon"></i>Make Groups</a>
								<div class="ui dropdown item">
								Set all filter
									<div class="menu">
										<a class="item" onclick="setAllFilters(-1, '');">as Nothing</a>
										<a class="item" onclick="setAllFilters(-1, 'No')">as No</a>
										<a class="item" onclick="setAllFilters(-1, 'Yes')">as Yes</a>
										<a class="item" onclick="setAllFilters(-1, 'Yes(Core)')">as Yes(Core)</a>
									</div>
								</div>
								<div class="ui dropdown link item">
									<i class="download icon"></i><div class="text">Download</div>
									<div class="menu">
										<a class="item" onclick="tableCustom.download('csv', 'data.csv');">Download CSV</a>
										<a class="item" onclick="tableCustom.download('json', 'data.json');">Download jSON</a>
										<a class="item" onclick="tableCustom.download('xlsx', 'data.xlsx');">Download XLSX</a>
									</div>
								</div>
								<div class="right menu">
									<!--div class="item"><i class="chart pie icon" onclick="window.open('venn.htm?gs=" + i + "&dataset=' + $('#dataset').dropdown('get value') + '&all=' + $('#datasetAll').checkbox('is checked'))\"></i></div>
										<div class="item"><i class="search icon" onclick="window.open('bestSolution.htm?values=[" + i + ",-1,-1]')\"></i></div>"+
									</div-->
								</div>
							</div>
							<div class="tabRgN" id="divTextCustom">
								<div class="ui form">
									<div class="field">
										<label>Groups (one per line)</label>
										<textarea id="textGroupCustom"></textarea>
									</div>
								</div>
								<div class="actions">
									<div id="makeCustomRg" class="ui green right labeled icon ok button">
										<i class="angle right icon"></i>
										Next
									</div>
								</div>
							</div>
							<div class="tabRgN" style="display:none;" id="divTabCustom">
								<div id="tabGroupCustom"></div>
								<div class="actions">
									<div class="ui red right icon cancel button" onclick="$('#divTextCustom').css('display', 'block');$('#divTabCustom').css('display', 'none');">
										<i class="angle left icon"></i>
										Back
									</div>
									<div id="makeAlign" class="ui green right labeled icon ok button" onclick="$('#divTabCustom').css('display', 'none');$('#tabRgCustom').css('display', 'block');calcTableGroupCustom();">
										<i class="play icon"></i>
										Finish
									</div>
								</div>
							</div>
							<div class="tabRgN" style="display:none;" id="tabRgCustom"></div>
						</div>
					</div>
				</div>
			</div>
			<div id="linkTableFilter" class="sectionFooter ui primary bottom attached button">See filtered families</div>
		</div>

		<div class="section ui raised segments">
			<div class="sectionHeader ui top attached segment">
				<h1 class="ui header">Statistics</h1>
			</div>
			<div class="sectionLineA" style="margin:20px;">
				<div class="settingsGridC">
					<div style="grid-area:objA;">Field<br>
					<div id="field" class="ui fluid search selection dropdown" onchange="changeChart();">
						<input  type="hidden">
						<i class="dropdown icon"></i>
						<div class="default text"></div>
						<div class="menu">
							<div class="divider"></div>
							<div class="header">
								<i class="folder icon"></i> Family Information
							</div>
							<div class="sub item" data-value="famClustCoeff">Clustering Coefficient</div>
							<div class="sub item" data-value="famNumSeqs">Number of Sequences</div>
							<div class="sub item" data-value="famNumGenomes">Number of Genomes</div>
							<div class="divider"></div>
							<div class="header">
								<i class="folder icon"></i> Sequence Information
							</div>
							<div class="sub item" data-value="clustCoeff">Clustering  Coefficient</div>
							<div class="sub item" data-value="numEges">Number of Edges</div>
							<div class="sub item" data-value="numHSP">Number of HSPs</div>
							<div class="sub item" data-value="geneLen">Length</div><div class="divider"></div>
								<div class="header">
								<i class="folder icon"></i> Alignment Information
							</div>
							<div class="sub item" data-value="evalue">Max -log10(E-Value)</div>
							<div class="sub item" data-value="ident">Max Identity (%)</div>
							<div class="sub item" data-value="lenAlign">Max Length Alignment (%)</div>
							<div class="sub item" data-value="bitscore">Max Bit-score</div>
							<div class="sub item" data-value="gapOpening">Min Gap Opening</div>
							<div class="sub item" data-value="mismatch">Min Mismatchs</div>
							
							

						</div>
					</div></div>
					<div style="grid-area:objB;">Minimum<br><div class="ui mini fluid input"><input type="text" id="graphMin" onchange="changeChart();"></div></div>
					<div style="grid-area:objC;">Maximum<br><div class="ui mini fluid input"><input type="text" id="graphMax" onchange="changeChart();"></div></div>
					<div style="grid-area:objD;">Interval<br><div class="ui mini fluid input"><input type="text" id="graphInterval" onchange="changeChart();"></div></div>
					<div class="ui toggle checkbox" style="grid-area:objE;padding-bottom:0.5em;" id="graphAccum"><input name="public" type="checkbox" onchange="changeChart();"><label>Accumulated</label></div>
				</div>
			</div>
			<div class="sectionData" style="width:95%">
				<div id="curve_chart" style="height: 100%;"></div>
			</div>
			<div class="sectionFooter ui primary bottom attached button" onclick="window.open(chart.getImageURI())"><i class="download icon"></i>Download PNG</div>
		</div>

		<div id="divPoints" class="section ui raised segments">
			<div class="sectionHeaderIcon ui top attached segment">
				<i style="grid-area:icon;" id="pointsSidebarIcon" class="sidebar icon"></i>
				<h1 class="ui header">2D Plot</h1>
			</div>
			<div id="pointsSegment" class="sectionData ui attached segment" style="overflow:hidden;">
				<div id="pointsSidebar" class="ui inverted labeled icon left inline vertical demo sidebar menu">
					<div class="ui horizontal divider">Layout Settings</div>
					<div class="line">
						<span>Color by group</span>
						<div id="scatterType" class="ui selection dropdown obj" onchange="changeScatterChart();">
							<input type="hidden">
							<i class="dropdown icon"></i>
							<div class="default text"></div>
							<div class="menu">
								<div class="item" data-value="">None</div>
								<script>
									for (var i = 0; i < gs.length; i++) {
										document.write("<div class=\"item\" data-value=\"" + i + "\">" + gs[i].name + "</div>");

									}
								</script>
							</div>
						</div>
					</div>
					<div class="line">
						<span>Show labels</span>
						<div id="scatterLabels" class="ui inverted slider checkbox obj" onchange="changeScatterChart();">
							<input type="checkbox">
							<label></label>
						</div>
					</div>
				</div>
				<div id="pointsPusher" class="pusher">
					<div id="scatter_chart"></div>
					<div id="scatterLegendDiv">
						<div style="font-weight:bold;">Legend</div>
						<div id="scatterLegend" style="display: flex;flex-direction: column;flex-wrap: wrap;height: 90%;" class="ui list">
							<div class="item">
								<i class="circle icon" style="color:blue;"></i>Genomes
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="sectionFooter ui primary bottom attached button" onclick="window.open(chart.getImageURI())">
				<i class="download icon"></i>Download PNG
			</div>
		</div>

		<div id="divPhylo" class="section ui raised segments">
			<div class="sectionHeaderIcon ui top attached segment">
				<i style="grid-area:icon;" id="treeSidebarIcon" class="sidebar icon"></i>
				<h1 class="ui header">Phylogeny</h1>
				<div class="sectionHeaderObj">
					<div class="text">Zoom:</div>
					<div id="treeZoom" class="ui slider"></div>
				</div>
				<div class="sectionHeaderObj2" style="width:300px;">
					<div class="ui fluid search selection dropdown" id="treeType">
						<input  type="hidden">
						<i class="dropdown icon"></i>
						<div class="default text"></div>
						<div class="menu">
							<script>
								if(typeof(trees) == "undefined") {
									$("#divPhylo").css("display", "block");
								}
								else {
									for(var i = 0; i < trees.length; i++) {
										document.write("<div class=\"divider\"></div>");
										document.write("	<div class=\"header\">");
										document.write("	<i class=\"folder icon\"></i> " + trees[i].name);
										document.write("</div>");
										for(var j = 0; j < trees[i].childs.length; j++)
											document.write("<div class=\"sub item\" data-value=\"trees["+i+"].childs["+j+"]\">" + trees[i].childs[j].name + "</div>");

									}
								}
							</script>
						</div>
					</div>
					<div class="item">
						<i id="iconTree" style="font-size: 1.53em;" class="arrow right icon" onclick="var obj = eval($('#treeType').dropdown('get value')); func(false, obj.canonical);"></i>
					</div>
				</div>
			</div>
			<div id="treeSegment" class="sectionData ui attached segment" style="overflow:hidden;">
				<div id="treeSidebar" class="ui inverted labeled icon left inline vertical demo sidebar menu">
					<div class="ui horizontal divider">Layout Settings <i id="thumbtack" class="icon thumbtack"></i></div>
					<div class="line">
						<span>Layout</span>
						<div id="phyloLayout" class="ui fluid selection dropdown obj">
							<input name="gender" type="hidden">
							<i class="dropdown icon"></i>
							<div class="default text"></div>
							<div class="menu">
								<div class='item' data-value="rectangular">Rectangular</div>
								<div class='item' data-value="radial">Radial</div>
								<div class='item' data-value="circular">Circular</div>
								<div class='item' data-value="diagonal">Diagonal</div>
								<div class='item' data-value="hierarchical">Hierarchical</div>

							</div>
						</div>
					</div>
					<div class="line">
						<span>Align right</span>
						<div id="treeRightLabel" class="ui inverted slider checkbox obj">
							<input type="checkbox"></input>
							<label></label>
						</div>
					</div>
					<div class="line">
						<span>Show keys in label</span>
						<div id="treeLabels" class="ui inverted slider checkbox obj">
							<input type="checkbox">
							<label></label>
						</div>
					</div>
					<div class="line">
						<span>Show branch length</span>
						<div id="treeBranchLenght" class="ui inverted slider checkbox obj">
							<input type="checkbox">
							<label></label>
						</div>
					</div>
					<div class="line">
						<span>Vertical distance</span>
						<div class="obj">
							<i class="inverted plus square icon"></i>
							<i class="inverted minus square icon"></i>
						</div>
					</div>
					<div class="line">
						<span>Font Size</span>
						<div id="treeSliderFont" class="ui inverted slider obj full"></div>
					</div>
					<div class="line">
						<span>Force branch scale</span>
						<div class="ui input obj full">
							<input id="treeBranchScale" style="width: 100%;" placeholder="Number" type="text"/>
						</div>
					</div>
					<div class="line">
						<span>Force zoom scale</span>
						<div class="ui input obj full">
							<input id="treeZoomScale" style="width: 100%;" placeholder="Number" type="text"/>
						</div>
					</div>
					<div class="line">
						<span>Branch Length</span>
						<div id="treeSliderBranchLength" class="ui inverted slider obj full"></div>
					</div>
					<div class="line">
						<span>Branch Width</span>
						<div id="treeSliderBranchWidth" class="ui inverted slider obj full"></div>
					</div>
					<div class="line">
						<span>Node size</span>
						<div id="treeSliderNodeSize" class="ui inverted slider obj full"></div>
					</div>
					<div class="ui horizontal divider">Group Settings</div>
					<div class="line">
						<span>Node colored by</span>
						<div id="treeNodeGroup" class="ui fluid search selection dropdown obj">
							<input type="hidden">
							<i class="dropdown icon"></i>
							<div class="default text">Node color</div>
							<div class="menu">
								<div class='item' data-value="">Default</div>
								<script>
									if (gs.length > 0) {
										document.write("<div class=\"divider\"></div>");
										document.write("	<div class=\"header\">");
										document.write("	<i class=\"folder icon\"></i> Groups");
										document.write("</div>");
										for (var i = 0; i < gs.length; i++)
											document.write("<div class='sub item' data-value=\"rg" + i + "\">" + gs[i].name + "</div>");
									}
								</script>
							</div>
						</div>
					</div>
					<div class="line">
						<span>Edge colored by</span>
						<div id="treeEdgeGroup" class="ui fluid search selection dropdown obj">
							<input type="hidden">
							<i class="dropdown icon"></i>
							<div class="default text">Edge color</div>
							<div class="menu">
								<div class='item' data-value="">Default</div>
								<script>
									if (gs.length > 0) {
										document.write("<div class=\"divider\"></div>");
										document.write("	<div class=\"header\">");
										document.write("	<i class=\"folder icon\"></i> Groups");
										document.write("</div>");
										for (var i = 0; i < gs.length; i++)
											document.write("<div class='sub item' data-value=\"rg" + i + "\">" + gs[i].name + "</div>");
									}
								</script>
							</div>
						</div>
					</div>
					<div class="line">
						<span>Node name using</span>
						<div id="treeNodeName" class="ui fluid search selection dropdown obj">
							<input type="hidden">
							<i class="dropdown icon"></i>
							<div class="default text">Edge color</div>
							<div class="menu">
								<div class='item' data-value="">Default</div>
								<script>
									if (gs.length > 0) {
										document.write("<div class=\"divider\"></div>");
										document.write("	<div class=\"header\">");
										document.write("	<i class=\"folder icon\"></i> Groups");
										document.write("</div>");
										for (var i = 0; i < gs.length; i++)
											document.write("<div class='sub item' data-value=\"rg" + i + "\">" + gs[i].name + "</div>");
									}
								</script>
							</div>
						</div>
					</div>
					<div class="line">
						<span>Show Metadata</span>
						<select id="treeMetadata" class="ui fluid dropdown obj" multiple="">
							<script>
								for (var i = 0; i < gs.length; i++)
									document.write("<option value=\"" + i + "\">" + gs[i].name + "</option>");
							</script>
						</select>
					</div>
					<div class="line">
						<span>Show Metadata text</span>
						<div id="treeMetadataText" class="ui inverted slider checkbox obj">
							<input type="checkbox">
							<label></label>
						</div>
					</div>
				</div>
				<div id="pusher" class="sectionData pusher">
					<div style="height:calc(100vh - 107px);width: calc(100vw - 36px) !important;" id="phylogram"></div>
				</div>
			</div>
			<div class="sectionFooter ui bottom attached buttons">
				<button id="downloadTree" class="ui primary button"><i class="download icon"></i><div class="text">Download</div> SVG</button>
				<button id="downloadNewick" class="ui button" id="phyloDownNewick"><i class="download icon"></i><div class="text">Download</div> Newick</button>
			</div>
	</div>

	<div style="visibility: hidden;display: none;">
		<img id="hyphy-chart-image" />
		<canvas id="hyphy-chart-canvas"></canvas>
	</div>
</body>
<script>
	session = null;
	function load() {
		$('#saveSubPageModal').modal({
            onHidden:() => {document.getElementById('saveSubPageButton').onclick = null;},
		});
		
		session = new Session(document);

		scrollsnap();
		if(typeof(serverUrl) == 'undefined' || typeof(blastPort) == 'undefined') {
			$('#linkMakeBlast').css('display','none');
		}

		$('.ui.dropdown').dropdown();
		$('#context1.menu .item').tab();
		$('#pointsSidebar').sidebar({transition: 'overlay',context: $('#pointsSegment')}).sidebar('attach events', '#pointsSidebarIcon');

		google.charts.load('current', {
			'packages': ['corechart']
		});
		$("#field").dropdown("set selected","evalue");
		$('.ui.dropdown.clearable').dropdown({clearable: true});
		google.charts.setOnLoadCallback(drawChartDefault);
	}

	function drawChartDefault() {
		changeChart();
		if(typeof(points) == "undefined") {
			$("#divPoints").css("display", "none");
		}
		else {
			for(var i = 0; i < points.length; i++) {
				var tooltip = "<div style=\"width:300px;padding:10px;\"><b>" + genomes[i].name + "<b><div class=\"ui divider\"></div>" + 
					"<div id=\"scatterLegend\" class=\"ui list\">";
				for(var j = 0; j < gs.length;j++) {
					tooltip += "<div class=\"item\">" + gs[j].name + ": <i class=\"circle icon\" style=\"color:" + gs[j].childs[genomes[i].rg[j]].color + ";\"></i>" + gs[j].childs[genomes[i].rg[j]].name + "</div>";
				}
				tooltip += "</div></div>";
				points[i].push(tooltip);
				points[i].push("color:blue;stroke-color:black;");
				//if(showLabels)
//					points[i].push(genomes[i].abbrev);
			}
			drawScatterChart();
		}
	}

	function changeChart() {
		let select = $("#field").dropdown("get value");
		if (select == "evalue")
			drawChart(statEValue, "-log10(E-Value)");
		else if (select == "ident")
			drawChart(statIdent, "Identity");
		else if (select == "lenAlign")
			drawChart(statLenAlign, "Length Alignment");
		else if (select == "bitscore")
			drawChart(statBitscore, "Bit-score");
		else if (select == "gapOpening")
			drawChart(statGapOpening, "Gap Opening");
		else if (select == "mismatch")
			drawChart(statMismatch, "Mismatch");
		else if (select == "clustCoeff")
			drawChart(statClusterCoeff, "Clustering Coefficient");
		else if (select == "numEdges")
			drawChart(statNumEdge, "Number of Edges");
		else if (select == "numHSP")
			drawChart(statHSP, "HSP");
		else if (select == "geneLen")
			drawChart(statGeneLen, "Gene Length");

		else if (select == "famClustCoeff")
			drawChart(statFamClusterCoeff, "Clustering Coefficinet");
		else if (select == "famNumSeqs")
			drawChart(statFamNumSeqs, "Number of Sequences");
		else if (select == "famNumGenomes")
			drawChart(statFamNumGenomes, "Number of Genomes");
	}

	function drawChart(chartData, title) {
		var accum = $("#graphAccum").checkbox("is checked");

		var min =  0;
		if($("#graphMin").val() != "")
			min = parseFloat($("#graphMin").val());
		var max = 100;
		if($("#graphMax").val() != "")
			max = parseFloat($("#graphMax").val());
		var interval = 1;
		if($("#graphInterval").val() != "")
			interval = parseFloat($("#graphInterval").val());

		var discreteData = [["Value", "Frequence"]];
		var i = 1;
		var frequence = 0;
		ticks = [min];
		//while(chartData[i][0] <= min && i < chartData.length) {
		//	frequence += chartData[i][1];
		//	i++;
		//}
		//if(frequence > 0)
		//	discreteData.push([min, frequence]);
		while(i < chartData.length && min <= max) {
			while(i < chartData.length && chartData[i][0] <= min) {
				frequence += chartData[i][1];
				i++;
			}
			if(frequence != 0) discreteData.push([min, frequence]);
			ticks.push(min);
			if(accum == false)
				frequence = 0;
			min += interval;
		}
		//ticks.push(min);

		var tmpTicks = ticks;
		ticks = [];
		for(var i = 0; i < tmpTicks.length; i+=parseInt(tmpTicks.length/30))
			ticks.push(tmpTicks[i]);

		if(typeof(google.visualization) !== "undefined") {
			var data = google.visualization.arrayToDataTable(discreteData);
	
			var options = {
				title: title + " Distribution",
				vAxis: {
				},
				hAxis: {
					showTextEvery: 1,
					ticks:ticks,
				},
				legend: 'none',
				chartArea: {
					left: 100,
					top: 20,
					width: '90%',
					height: '80%'
				},
			};
	
			chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
			chart.draw(data, options);
		}
	}

	function drawScatterChart() {
		let showLabels = $('#scatterLabels').checkbox('is checked');

		scatterData = new google.visualization.DataTable();
		scatterData.addColumn('number', 'X');
		scatterData.addColumn('number', 'Y');
		scatterData.addColumn({type:'string', role:'tooltip', 'p': {'html': true}});
		scatterData.addColumn({type:'string', role:'style'});
		//scatterData.addColumn({type:'string', role:'annotation'});

		scatterData.addRows(points);

		let ticks = [-15, -10, -5, 0, 5, 10, 15, ];
		scatterOptions = {
			//title: 'Age vs. Weight comparison',
			displayAnnotations: false,
			'chartArea': {'width': '90%', 'height': '90%'},
			hAxis: {title: 'X', minValue: -15, maxValue: 15},
			vAxis: {title: 'Y', minValue: -15, maxValue: 15},
			legend: 'none',
			tooltip: {isHtml: true},
			vAxis: {
				showTextEvery: 1,
				ticks:ticks,
			},
			hAxis: {
				showTextEvery: 1,
				ticks:ticks,
			},
		};

		scatterChart = new google.visualization.ScatterChart(document.getElementById('scatter_chart'));
		scatterChart.draw(scatterData, scatterOptions);
		changeScatterChart();
	}

	function changeScatterChart() {
		$("#scatterLegend").empty();
		if($("#scatterType").dropdown("get value") == "") {
			for(let i = 0; i < genomes.length; i++)
				scatterData.setValue(i,3,"color:blue;");
			$("#scatterLegend").append('<div class="item"><i class="circle icon" style="color:blue;"></i>Genomes</div>');
		}
		else {
			var rg = eval($("#scatterType").dropdown("get value"));
			for(var i = 0; i < genomes.length; i++) {
				scatterData.setValue(i,3,"color:" + gs[rg].childs[genomes[i].rg[rg]].color + ";stroke-color:black;");
			}
			for(var i = 0; i < gs[rg].childs.length; i++) {
				$("#scatterLegend").append('<div class="item" style="width:10em;"><i class="circle icon" style="color:' + gs[rg].childs[i].color + ';"></i>' + gs[rg].childs[i].name +'</div>');
			}
		}
		scatterOptions.displayAnnotations = false;
		scatterChart.draw(scatterData, scatterOptions);
	}

	var resizeTimer = new EventTimer(() => {
		changeChart();
		changeScatterChart();
	}, 500);
	$(window).resize(function () {
		resizeTimer.trigger();
	});

	function makeTableGroupCustom() {
		let array = $('#textGroupCustom').val().split('\n');
		let groups = array.filter(function(item, pos) {
			if(item == '')
				return false;
			return array.indexOf(item) == pos;
		});

		let tabCustomGroupsData = [];
		let field = '<div id="customGroupGen###" style="overflow: initial;" class="ui fluid dropdown clearable" onchange="">' +
			'	<input type="hidden">' +
			'	<i class="dropdown icon"></i>' +
			'	<div class="default text">Ignore</div>' +
			'	<div class="menu">';
		for(let i = 0; i < groups.length; i++)
			field += '		<div class="item" data-value="' + i + '">' + groups[i] + '</div>';
		field += '	</div>' +
			'</div>';

		for(let i = 0; i < genomes.length; i++) {
			tabCustomGroupsData.push({
				gen: genomes[i].name,
				group: field.replace('###', i)
			});
		}
		//tabCustomGroups.setData(tabCustomGroupsData);
		console.log(tabCustomGroupsData);
		$('.ui.dropdown.clearable').dropdown({clearable: true});
	}

	function calcTableGroupCustom() {
		let dataGenome = null;
		let dataset = $("#dataset").dropdown("get value");
		if(dataset == "h")
			dataGenome = statGenome.homo;
		else if(dataset == "d")
			dataGenome = statGenome.doms;
		else if(dataset == "o")
			dataGenome = statGenome.orthos;
		
		let all = $("#datasetAll").checkbox("is checked");

		let array = $('#textGroupCustom').val().split('\n');
		let groups = array.filter(function(item, pos) {
			if(item == '')
				return false;
			return array.indexOf(item) == pos;
		});

		let totalGroups = Array(groups.length).fill(0);
		let index = [];
		for(let i = 0; i < genomes.length; i++) {
			if($("#customGroupGen" + i).dropdown("get value") == "") {
				index.push(-1);
			}
			else {
				index.push(parseInt($("#customGroupGen" + i).dropdown("get value")));
				totalGroups[$("#customGroupGen" + i).dropdown("get value")]++;
			}
		}

		let dataTable = [];
		if(dataGenome != null) {
			dataGenome.forEach(function(reg){
				resultGroups = Array(groups.length).fill(0);
				var ok = false;
				for(let i = 0; i < reg.cod.length; i++) {
					if(reg.cod[i] == '1' && index[i] != -1) {
						resultGroups[index[i]]++;
						ok = true;
					}
				}
				if(ok) {
					let vet = [];
					vet.push(reg.total);
					vet.push(reg.all);
					for(let i = 0; i < resultGroups.length; i++) {
						if(resultGroups[i] == 0)
							vet.push(0);
						else if(resultGroups[i] < totalGroups[i])
							vet.push(1);
						else
 							vet.push(2);
					}
					dataTable.push(vet);
				}
			});
		}
		dataTable.sort(function(a,b){
			for(let i = 1; i < a.length; i++) {
				if(a[i] != b[i])
					return a[i] - b[i];
			}
			return 0;
		});

		let dataTableFinal = [];
		let ant = dataTable[0];
		for(let i = 1; i < dataTable.length; i++) {
			var ok = true;
			for(let j = 1; j < ant.length; j++) {
				if(ant[j] != dataTable[i][j])
					ok = false;
			}
			if(ok)
				ant[0] += dataTable[i][0];
			else {
				let obj = {total: ant[0], all: ant[1]};
				for(let j = 2; j < ant.length; j++) {
					if(ant[j] == 0)
						obj["c" + (j-2)] = "No";
					else if(ant[j] == 1)
						obj["c" + (j-2)] = "Yes";
					else
						obj["c" + (j-2)] = "Yes(Core)";
				}
				dataTableFinal.push(obj);
				ant = dataTable[i];
			}
		}
		let obj = {total: ant[0], all: ant[1]};
		for(let j = 2; j < ant.length; j++) {
			if(ant[j] == 0)
				obj["c" + (j-2)] = "No";
			else if(ant[j] == 1)
				obj["c" + (j-2)] = "Yes";
			else
				obj["c" + (j-2)] = "Yes(Core)";
		}
		dataTableFinal.push(obj);

		let columns = [
			{
				title: "# Families",
				field: "total",
				width: 100,
				bottomCalc: "sum",
				frozen: true,
				sorter: "number",
				headerFilter: true,
				headerFilterFunc: numFilter
			},
			{
				title: "All filter",
				field: "all",
				visible: false
			}];

		for (let i = 0; i < groups.length; i++) {
			columns.push({
				title: groups[i],
				field: "c" + i,
				editor: "string",
				sorter: "string",
				headerFilter:"select",
				headerFilterParams:{"":"Nothing", "No":"No", "Yes":"Yes", "Yes(Core)":"Yes(Core)"},
				headerFilterFunc:"like",
				columnVertAlign:"bottom",
				minWidth:100,
			});
		}

		tableCustom = new Tabulator("#tabRgCustom", {
			movableRows: false,
			resizableColumns: false,
			progressiveRender: true,
			progressiveRenderSize: 100,
			progressiveRenderMargin: 100,
			virtualDomBuffer:100,
			layout:"fitDataFill",
			tooltipsHeader: true,
			columns: columns,
		});
		tableCustom.setData(dataTableFinal);
		if(all)
			tableCustom.setFilter("all", "=", "f");
	}

	function openBestSolution(i) {
		session.changePage('bestSolution', {
			gsId: i,
		});
	}

	function openVenn(i) {
		session.changePage('venn', {
			dataset: $("#dataset").dropdown("get value"),
			all: $("#datasetAll").checkbox("is checked"),
			gsId: i,
		});
	}
</script>
</html>
